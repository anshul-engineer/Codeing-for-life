#Given a value N. The task is to find how many numbers less than or equal to N have numbers of divisors exactly equal to 3.

#The first line contains integer T, denoting number of test cases. Then T test cases follow. The only line of each test case contains an integer N.

#For each testcase, in a new line, print the answer of each test case
#Print the answer of each test case in a new line.
# codeing in python by anshul thakur
# taken from geek for geeks
lstn = []
# This function computes the factor of the argument passed
# this is to understand the approch and easy way is to find perfect squares as only they have three factors 
def print_factors(x):
   lst = []
   for i in range(1, x + 1):
       if x % i == 0:
           lst.append(i)
   return(lst)

def sumval(val):
    lt =[]

t = int(input("enter no of test cases:"))
for j in range(1,t+1):
    n = int(input())
    lstn.append(n)

for l in range(0,len(lstn)):
    lstt = []
    for ll in range(0,lstn[l]):

       a = len(print_factors(ll))
       count = 0
       if a == 3:
         count = count+1
         lstt.append(count)
    print(sum(lstt))
